// This config is in the KDL format: https://kdl.dev
// "/-" comments out the following node.
//
// For configuration documentation see https://github.com/YaLTeR/niri/wiki/Configuration:-Overview
//
// For examples see https://github.com/YaLTeR/niri/blob/main/resources/default-config.kdl

input {
    keyboard {
        xkb { }
    }

    touchpad {
        tap
        natural-scroll
    }

    mouse { }

    tablet {
        map-to-output "eDP-1"
    }

    touch {
        map-to-output "eDP-1"
    }
}

// External screen
output "DP-1" {
    scale 1
    variable-refresh-rate
    background-color "#363a4f" // Catppuccin surface0
}

// Laptop screen
output "eDP-1" {
    scale 1.0
    background-color "#363a4f" // Catppuccin surface0
}

layout {
    focus-ring {
        width 4
        active-color "#b7bdf8" // Lavender from Catppuccin Macchiato theme
        inactive-color "#6e738d" // Overlay0 from Catppuccin Macchiato theme
    }

    insert-hint {
        color "#f5a97f80" // Peach from Catppuccin with reduced opacity
    }

    preset-column-widths {
        proportion 0.25
        proportion 0.33333
        proportion 0.5
        proportion 0.66667
        proportion 0.75
    }

    // default-column-width { proportion 0.5; }
    // If you leave the brackets empty, the windows themselves will decide their initial width.
    default-column-width {}

    gaps 8
    center-focused-column "never"

    default-column-display "tabbed"

    tab-indicator {
        width 6
        corner-radius 3
        gaps-between-tabs 6
        active-color "#f4dbd6" // rosewater
        gap 8
        place-within-column
        hide-when-single-tab
    }
}

cursor {
    // I disabled hide-when-typing because it causes the character view to jump down
    // every time I press a key and move the mouse at the same time in Overwatch
    // when running wine in native Wayland mode.
}

environment {
    // If xwayland-satellite.service is running it defines an Xwayland display
    // with this identifier.
    DISPLAY ":0"
}

// The path is formatted with strftime(3) to give you the screenshot date and time.
screenshot-path "~/Pictures/Screenshots/Screenshot from %Y-%m-%d %H-%M-%S.png"

hotkey-overlay {
    // Uncomment this line if you don't want to see the hotkey help at niri startup.
    skip-at-startup
}

window-rule {
    geometry-corner-radius 2
}

window-rule {
    match is-window-cast-target=true
    focus-ring {
        active-color "#dd7878" // Maroon from Catppuccin Macchiato theme
        inactive-color "#f0c6c6" // Flamingo from Catppuccin Macchiato theme
    }
}

window-rule {
    match app-id="kitty"
    default-column-width { proportion 0.25; }
}

window-rule {
    match app-id="neovide"
    default-column-width { proportion 0.75; }
}

window-rule {
    match app-id="1Password"
    default-column-width { proportion 0.33; }
    block-out-from "screen-capture"
}

window-rule {
    match app-id="gamescope"
    open-fullscreen true
}

layer-rule {
    match namespace="notification"
    match namespace="swaync-control-center"
    block-out-from "screencast"
}

binds {
    Mod+Shift+Slash { show-hotkey-overlay; }

    Mod+V hotkey-overlay-title="Launch apps or switch to open windows" { spawn "rofi" "-show" "combi" "-combi-modes" "window,drun"; }
    Mod+Ctrl+L hotkey-overlay-title="Lock Session" { spawn "loginctl" "lock-session"; }
    Mod+Slash hotkey-overlay-title="Show Notification Center" { spawn "swaync-client" "-t"; }

    XF86AudioPlay         allow-when-locked=true { spawn "playerctl" "play-pause"; }
    XF86AudioNext         { spawn "playerctl" "next"; }
    XF86AudioPrev         { spawn "playerctl" "previous"; }
    XF86AudioRaiseVolume  { spawn "swayosd-client" "--output-volume" "1"; }
    XF86AudioLowerVolume  { spawn "swayosd-client" "--output-volume" "-1"; }
    XF86AudioMute         { spawn "swayosd-client" "--output-volume" "mute-toggle"; }
    XF86MonBrightnessUp   { spawn "swayosd-client" "--brightness" "+5"; }
    XF86MonBrightnessDown { spawn "swayosd-client" "--brightness" "-5"; }

    Mod+Backspace { close-window; }

    Mod+Left  { focus-column-left; }
    Mod+Down  { focus-window-down; }
    Mod+Up    { focus-window-up; }
    Mod+Right { focus-column-right; }

    Mod+Shift+Left  { move-column-left; }
    Mod+Shift+Down  { move-window-down; }
    Mod+Shift+Up    { move-window-up; }
    Mod+Shift+Right { move-column-right; }

    Mod+T { switch-focus-between-floating-and-tiling; }
    Mod+Shift+T { toggle-window-floating; }

    Mod+Home { focus-column-first; }
    Mod+End  { focus-column-last; }
    Mod+Shift+Home { move-column-to-first; }
    Mod+Shift+End  { move-column-to-last; }

    Mod+Page_Down      { focus-workspace-down; }
    Mod+Page_Up        { focus-workspace-up; }
    Mod+Shift+Page_Down { move-column-to-workspace-down; }
    Mod+Shift+Page_Up   { move-column-to-workspace-up; }

    Mod+Shift+Ctrl+Page_Down { move-workspace-down; }
    Mod+Shift+Ctrl+Page_Up   { move-workspace-up; }

    Mod+Ctrl+1 { focus-workspace 1; }
    Mod+Ctrl+2 { focus-workspace 2; }
    Mod+Ctrl+3 { focus-workspace 3; }
    Mod+Ctrl+4 { focus-workspace 4; }
    Mod+Ctrl+5 { focus-workspace 5; }
    Mod+Ctrl+6 { focus-workspace 6; }
    Mod+Ctrl+7 { focus-workspace 7; }
    Mod+Ctrl+8 { focus-workspace 8; }
    Mod+Ctrl+9 { focus-workspace 9; }
    Mod+Shift+1 { move-column-to-workspace 1; }
    Mod+Shift+2 { move-column-to-workspace 2; }
    Mod+Shift+3 { move-column-to-workspace 3; }
    Mod+Shift+4 { move-column-to-workspace 4; }
    Mod+Shift+5 { move-column-to-workspace 5; }
    Mod+Shift+6 { move-column-to-workspace 6; }
    Mod+Shift+7 { move-column-to-workspace 7; }
    Mod+Shift+8 { move-column-to-workspace 8; }
    Mod+Shift+9 { move-column-to-workspace 9; }

    Mod+I { consume-window-into-column; }
    Mod+O { expel-window-from-column; }

    Mod+W { toggle-column-tabbed-display; }

    Mod+R { switch-preset-column-width; }
    Mod+F { maximize-column; }
    Mod+Shift+F { fullscreen-window; }
    Mod+M { center-column; }

    Mod+4 { set-column-width "25%"; }
    Mod+3 { set-column-width "33.333%"; }
    Mod+2 { set-column-width "50%"; }
    Mod+6 { set-column-width "66.666%"; }
    Mod+7 { set-column-width "75%"; }

    Mod+Minus { set-column-width "-10%"; }
    Mod+Equal { set-column-width "+10%"; }

    Mod+Shift+Minus { set-window-height "-10%"; }
    Mod+Shift+Equal { set-window-height "+10%"; }

    Print { screenshot; }
    Ctrl+Print { screenshot-screen; }
    Alt+Print { screenshot-window; }

    Mod+Shift+E { quit; }
    Mod+Shift+P { power-off-monitors; }

    Mod+Shift+Ctrl+T { toggle-debug-tint; }
}

// Settings for debugging. Not meant for normal use.
// These can change or stop working at any point with little notice.
debug {
    // Make niri take over its DBus services even if it's not running as a session.
    // Useful for testing screen recording changes without having to relogin.
    // The main niri instance will *not* currently take back the services; so you will
    // need to relogin in the end.
    // dbus-interfaces-in-non-session-instances

    // Wait until every frame is done rendering before handing it over to DRM.
    // wait-for-frame-completion-before-queueing

    // Enable direct scanout into overlay planes.
    // May cause frame drops during some animations on some hardware.
    // enable-overlay-planes

    // Disable the use of the cursor plane.
    // The cursor will be rendered together with the rest of the frame.
    // disable-cursor-plane

    // Slow down animations by this factor.
    // animation-slowdown 3.0

    // Override the DRM device that niri will use for all rendering.
    // render-drm-device "/dev/dri/renderD129"
}
